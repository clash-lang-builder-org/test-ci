# This Travis job script has been generated by a script via
#
#   runghc make_travis_yml_2.hs '--irc-channel' 'irc.freenode.org#clash-lang' 'clash-prelude.cabal'
#
# For more information, see https://github.com/hvr/multi-ghc-travis
#
stages:
  - precache
  - build
  - test

language: c
sudo: false

git:
  submodules: true  # whether to recursively clone submodules

notifications:
  irc:
    channels:
      - "irc.freenode.org#clash-lang"
    skip_join: true
    template:
      - "\x0313clash-prelude\x03/\x0306%{branch}\x03 \x0314%{commit}\x03 %{build_url} %{message}"

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store
    - $HOME/iverilog
    - dist-newstyle

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

  - rm -rfv $HOME/.cabal/packages/head.hackage

jobs:
  include:
    - &precache
      stage: precache
      compiler: "ghc-8.2.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.2.2,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}
      script: true

    - <<: *precache
      compiler: "ghc-8.4.3"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.4.3,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

    - <<: *precache
      compiler: "ghc-8.6.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.6.2,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

    - <<: *precache
      compiler: "ghc-head"
      env: GHCHEAD=true
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-head,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

    - &build
      stage: build
      compiler: "ghc-8.2.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.2.2,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}
      script: . ./.travis/script.sh

    - <<: *build
      compiler: "ghc-8.4.3"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.4.3,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

    - <<: *build
      compiler: "ghc-8.6.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.6.2,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

    - <<: *build
      compiler: "ghc-head"
      env: GHCHEAD=true
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-head,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

    - &test
      stage: test
      compiler: "ghc-8.2.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.2.2,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}
      script: . ./.travis/script_test.sh

    - <<: *test
      compiler: "ghc-8.4.3"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.4.3,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

    - <<: *test
      compiler: "ghc-8.6.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.6.2,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

    - <<: *test
      compiler: "ghc-head"
      env: GHCHEAD=true
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-head,ghdl,gperf,g++-multilib], sources: [hvr-ghc,pgavin-ghdl]}}

  allow_failures:
    - compiler: "ghc-head"

before_install:
  - HC=${CC}
  - HCPKG=${HC/ghc/ghc-pkg}
  - unset CC
  - ROOTDIR=$(pwd)
  - mkdir -p $HOME/.local/bin
  - "PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$HOME/local/bin:$PATH"
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER
  - ghdl --version
  - chmod +x ./.travis/install_iverilog.sh
  - chmod +x ./.travis/script.sh
  - chmod +x ./.travis/script_test.sh
  - ./.travis/install_iverilog.sh
  - export PATH=$PATH:$HOME/iverilog/bin
  - vvp -V

install:
  - cabal --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - BENCH=${BENCH---enable-benchmarks}
  - TEST=${TEST---enable-tests}
  - HADDOCK=${HADDOCK-true}
  - INSTALLED=${INSTALLED-true}
  - GHCHEAD=${GHCHEAD-false}
  - travis_retry cabal new-update -v
  - "sed -i.bak 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config"
  - "sed -i 's/flags: cosim/flags: travisci cosim/g' cabal.project"
  - cat cabal.project
  # Overlay Hackage Package Index for GHC HEAD: https://github.com/hvr/head.hackage
  - |
    if $GHCHEAD; then
      echo "Disabling GHC HEAD for now. Singletons does not support it, causing unreasonable test times on Travis."
      echo "Remove these lines if you believe singletons has support for GHC HEAD."
      exit 1

      sed -i.bak 's/-- allow-newer:.*/allow-newer: *:base, *:template-haskell, *:ghc, *:Cabal/' ${HOME}/.cabal/config

      echo 'repository head.hackage'                                                        >> ${HOME}/.cabal/config
      echo '   url: http://head.hackage.haskell.org/'                                       >> ${HOME}/.cabal/config
      echo '   secure: True'                                                                >> ${HOME}/.cabal/config
      echo '   root-keys: 07c59cb65787dedfaef5bd5f987ceb5f7e5ebf88b904bbd4c5cbdeb2ff71b740' >> ${HOME}/.cabal/config
      echo '              2e8555dde16ebd8df076f1a8ef13b8f14c66bad8eafefd7d9e37d0ed711821fb' >> ${HOME}/.cabal/config
      echo '              8f79fd2389ab2967354407ec852cbe73f2e8635793ac446d09461ffb99527f6e' >> ${HOME}/.cabal/config
      echo '   key-threshold: 3'                                                            >> ${HOME}/.cabal.config

      cabal new-update head.hackage -v
    fi
  - grep -Ev -- '^\s*--' ${HOME}/.cabal/config | grep -Ev '^\s*$'
  - if [ -f "./configure.ac" ]; then
      (cd "." && autoreconf -i);
    fi
  - rm -f cabal.project.freeze
  - cabal new-build ${TEST} ${BENCH} --project-file="cabal.project" --dep all
  - cabal new-build --disable-tests --disable-benchmarks --project-file="cabal.project" --dep all
  - rm -rf "."/.ghc.environment.* "."/dist
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)
  - SRCDIR=$PWD
